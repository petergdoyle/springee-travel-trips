
drop table if exists available_flights cascade; 
drop table if exists universal_records cascade; 
drop table if exists air_segments cascade; 
drop table if exists flight_details cascade; 
drop table if exists form_of_payments cascade; 
drop table if exists passenger_details cascade; 
drop table if exists universal_records_object cascade; 
drop table if exists universal_records_xml cascade; 

-- table for searching flights
create table available_flights (
    id bigint generated by default as identity(start with 1) primary key, 
    departure_airport_code varchar_ignorecase(50) not null,   
    departure_time datetime not null,   
    arrival_airport_code varchar_ignorecase(50) not null,
    arrival_time datetime not null,   
    airline varchar_ignorecase(50) not null,
    airline_code varchar_ignorecase(50) not null,
    airline_flight_number varchar_ignorecase(50) not null,
    class_of_service varchar_ignorecase(50) not null,
    price float not null
)

-- universal_record is the top-level first-class entity
create table universal_records (
    id bigint generated by default as identity(start with 1) primary key, 
    create_date datetime not null
)

create table universal_records_xml (
    id bigint generated by default as identity(start with 1) primary key, 
    create_date datetime not null,
    xml LONGVARCHAR not null,
)
create table universal_records_object (
    id bigint generated by default as identity(start with 1) primary key, 
    create_date datetime not null,
    object_value LONGVARBINARY not null,
)

-- air_segment is the container for flightDetail, form_of_payment, and passenger_details
create table air_segments (
    id bigint generated by default as identity(start with 1) primary key, 
    create_date datetime not null,
    universal_record_id bigint, /* can save an air segment without being attached to a ur */
    constraint fk_air_segments_universal_record_id foreign key(universal_record_id) references universal_records(id)
)

-- flightDetail data associated with an air segment
create table flight_details (
    id bigint generated by default as identity(start with 1) primary key, 
    departure_airport_code varchar_ignorecase(50) not null,   
    departure_time datetime not null,   
    arrival_airport_code varchar_ignorecase(50) not null,
    arrival_time datetime not null,   
    airline varchar_ignorecase(50) not null,
    airline_code varchar_ignorecase(50) not null,
    airline_flight_number varchar_ignorecase(50) not null,
    class_of_service varchar_ignorecase(50) not null,
    price float not null,
    air_segment_id bigint, /* for demo purposes, can save a flightDetail without being associated to an air_segment */
    constraint fk_flights_air_sement_id foreign key(air_segment_id) references air_segments(id)
)

create table form_of_payments (
    id bigint generated by default as identity(start with 1) primary key, 
    form_of_payment_type varchar_ignorecase(50) not null,   
    credit_card_number varchar_ignorecase(50)  null,
    credit_card_name varchar_ignorecase(50) null,
    credit_expiry varchar_ignorecase(5),
    credit_ccid varchar_ignorecase(3),
    air_segment_id bigint not null,
    constraint fk_fop_air_sement_id foreign key(air_segment_id) references air_segments(id)
)

create table passenger_details (
    id bigint generated by default as identity(start with 1) primary key, 
    first_name varchar_ignorecase(50) not null,   
    last_name varchar_ignorecase(50) not null,   
    initials varchar_ignorecase(50),   
    contact_phone varchar_ignorecase(50) not null,
    contact_email varchar_ignorecase(50),
    country_of_residence_code varchar_ignorecase(50) not null,
    country_of_nationality_code varchar_ignorecase(50) not null,
    passport_Id varchar_ignorecase(50) not null,
    date_of_birth date null,
    valued_customer boolean null,
    air_segment_id bigint , /* for demo purposes, can save a flightDetail without being associated to an air_segment */
    constraint fk_passenger_details_air_sement_id foreign key(air_segment_id) references air_segments(id)
)
